#################################################
# DWhitehomeIO Ubuntu based VM/LXC bootstrap
# Installs and configures base requirements for cluster
#################################################
---
- hosts: lxcontainers
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: sf-service
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: service
        state: present
        key: "{{ lookup('file', lookup('env','USR',) + '.vault/keys/ansible_rsa) }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

# Install Packages
    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      apt:
        pkg:
          - curl
          - vim
          - git
          - ufw
          - software-properties-common
          - fail2ban
          - sl
          - htop
          - vnstat
          - ncdu
          - cockpit

# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow Cockpit Port
      ufw:
        rule: allow
        port: '9090'
        proto: tcp

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming
